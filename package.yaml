name:                Node
version:             0.1.0.7
github:              "Enecuum/Node"
license:             BSD3
author:              "Enecuum"
maintainer:          "mail@enecuum.com"
copyright:           "2018  Enecuum"

extra-source-files:
- README.md
# - ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:
    The structure of the program consists of a few channels,
    in every channel one function related to channel executes.
    The life cycle of such function is absolutely simple.
    The function reads from channel and depending from content of channel and
    # input variables execute some actions.
    # In IT literature such entity named actor.

    # There are three actors: central actor, server actor and client actor.

    # The server actor responsible for receiving messages from unfamiliar nodes.

    # The client actor responsible for connecting to sever actor of yet
    # unfamiliar node.

    # The central actor responsible for storing node state and manage decision,
    # processing external commands and response for them.

default-extensions:
- GADTs
- RankNTypes
- DeriveFunctor
- DeriveGeneric
- OverloadedStrings
- LambdaCase
- MultiParamTypeClasses
- ExplicitNamespaces
- TypeApplications
- ScopedTypeVariables
- TypeOperators
- TypeFamilies
- DataKinds
- FlexibleContexts
- FlexibleInstances
- PatternSynonyms
- PolyKinds
- DefaultSignatures
- ConstraintKinds
- NamedFieldPuns
- TupleSections
- ViewPatterns
- MultiWayIf

dependencies:
- base >= 4.7 && < 5
- bytestring
- fgl
- time-units
- network
- websockets
- unagi-chan
- aeson
- cereal
- mtl
- cryptonite
- base16-bytestring
- base58-bytestring
- base64-bytestring
- arithmoi
- directory
- filepath
- microlens
- microlens-mtl
- microlens-th
- microlens-ghc
- process
- extra
- time
- clock
- vector
- scientific
- containers
- random
- free
- iproute
- memory
- do-list
- transformers
- template-haskell
- async
- bimap
- random-shuffle
- split
- hex
- json-rpc-client
- json-rpc-server
- time-out
- text
- aeson-pretty
- unordered-containers
- rocksdb-haskell
- data-default
- hashtables
- resourcet
- retry
- exceptions
- hashable
- resource-pool
- unix-time
- cryptohash-sha256
- derive
- bytestring-conversion
- freer

library:
  source-dirs: src
  ghc-options:
  - -Wall

executables:
  BootNode-exe:
    main:                Main.hs
    source-dirs:         app/Enecuum/Legacy/BootNode
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -Wall
    - -O2
    dependencies:
    - Node

  SimpleNode-exe:
    main:                Main.hs
    source-dirs:         app/Enecuum/Legacy/SimpleNode
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -Wall
    - -O2
    dependencies:
    - Node
  LightClient-exe:
    main:                Main.hs
    source-dirs:         app/Enecuum/Legacy/LightClient
    ghc-options:
    - -Wall
    - -O2
    dependencies:
    - Node
  Tester-exe:
    main:                Main.hs
    source-dirs:         app/Enecuum/Legacy/Tester
    ghc-options:
    - -Wall
    - -O2
    dependencies:
    - Node

tests:
  functional-tests:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - hspec
    - HUnit
    - hspec-contrib
    - Node
